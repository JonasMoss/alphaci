1 / (k + mean(sigma^2) / mean(lambda)^2)
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2)
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
var(lambda) / (var(lambda) + mean(sigma^2))
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
var(lambda) / (var(lambda) + mean(sigma^2))
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
var(lambda) / (var(lambda) + mean(sigma^2))
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
var(lambda) / (var(lambda) + mean(sigma^2))
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
var(lambda) / (var(lambda) + mean(sigma^2))
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
var(lambda) / (var(lambda) + mean(sigma^2))
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
var(lambda) / (var(lambda) + mean(sigma^2))
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
var(lambda) / (var(lambda) + mean(sigma^2))
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
var(lambda) / (var(lambda) + mean(sigma^2))
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
var(lambda) / (var(lambda) + mean(sigma^2))
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
var(lambda) / (var(lambda) + mean(sigma^2))
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
1 / (k + mean(sigma^2) / mean(lambda)^2) / 2
var(lambda) / (var(lambda) + mean(sigma^2))
lambda
var(lamba)
var(lambda)
var(lambda/sum(lambda))
omega
devtools::load_all(".")
omega
library(alphaci)
lambda = runif(5)
sigma = runif(5)
alpha_bias(lambda, sigma)
omega(sigma, lambda) - alpha(sigma, lambda)
var(lambda) * (k - 1) / k
var(lambda) / (k * mean(lambda)^2 + mean(sigma^2))
t.test
t.test(mtcars[, 1], mtcars[, ])
?t.test(mtcars[, 1], mtcars[, ])
t.test
str(t.test(mtcars[, 1], mtcars[, ]))
library("future.apply")
plan(multisession)
x <- na.omit(psychTools::bfi[, 1:5])
k <- 5
rho <- 0.5
phi <- 2
sigma <- matrix(phi^2 * rho, k, k)
diag(sigma) <- phi^2
var_ell(sigma, kurt = 1) - var_ell(sigma, kurt = 1, parallel = TRUE)
devtools::load_all(".")
library("future.apply")
plan(multisession)
x <- na.omit(psychTools::bfi[, 1:5])
k <- 5
rho <- 0.5
phi <- 2
sigma <- matrix(phi^2 * rho, k, k)
diag(sigma) <- phi^2
#var_ell(sigma, kurt = 1) - var_ell(sigma, kurt = 1, parallel = TRUE)
# 1.526557e-16
set.seed(313)
x = simulate_tau(10, k, 1, 3)
true = alpha(rep(3, k), rep(1, k))
alphaci(x)
devtools::load_all(".")
library("future.apply")
plan(multisession)
x <- na.omit(psychTools::bfi[, 1:5])
k <- 5
rho <- 0.5
phi <- 2
sigma <- matrix(phi^2 * rho, k, k)
diag(sigma) <- phi^2
#var_ell(sigma, kurt = 1) - var_ell(sigma, kurt = 1, parallel = TRUE)
# 1.526557e-16
set.seed(313)
x = simulate_tau(10, k, 1, 3)
true = alpha(rep(3, k), rep(1, k))
alphaci(x)
boot::boot()
?boot::boot()
ratio <- function(d, w) sum(d$x * w)/sum(d$u * w)
boot(city, ratio, R = 999, stype = "w")
devtools::load_all(".")
library("boot")
ratio <- function(d, w) sum(d$x * w)/sum(d$u * w)
boot(city, ratio, R = 999, stype = "w")
# Stratified resampling for the difference of means.  In this
# example we will look at the difference of means between the final
# two series in the gravity data.
diff.means <- function(d, f)
{    n <- nrow(d)
gp1 <- 1:table(as.numeric(d$series))[1]
m1 <- sum(d[gp1,1] * f[gp1])/sum(f[gp1])
m2 <- sum(d[-gp1,1] * f[-gp1])/sum(f[-gp1])
ss1 <- sum(d[gp1,1]^2 * f[gp1]) - (m1 *  m1 * sum(f[gp1]))
ss2 <- sum(d[-gp1,1]^2 * f[-gp1]) - (m2 *  m2 * sum(f[-gp1]))
c(m1 - m2, (ss1 + ss2)/(sum(f) - 2))
}
grav1 <- gravity[as.numeric(gravity[,2]) >= 7,]
boot(grav1, diff.means, R = 999, stype = "f", strata = grav1[,2])
library("boot")
ratio <- function(d, w) sum(d$x * w)/sum(d$u * w)
boot(city, ratio, R = 999, stype = "w")
# Stratified resampling for the difference of means.  In this
# example we will look at the difference of means between the final
# two series in the gravity data.
diff.means <- function(d, f)
{    n <- nrow(d)
gp1 <- 1:table(as.numeric(d$series))[1]
m1 <- sum(d[gp1,1] * f[gp1])/sum(f[gp1])
m2 <- sum(d[-gp1,1] * f[-gp1])/sum(f[-gp1])
ss1 <- sum(d[gp1,1]^2 * f[gp1]) - (m1 *  m1 * sum(f[gp1]))
ss2 <- sum(d[-gp1,1]^2 * f[-gp1]) - (m2 *  m2 * sum(f[-gp1]))
c(m1 - m2, (ss1 + ss2)/(sum(f) - 2))
}
grav1 <- gravity[as.numeric(gravity[,2]) >= 7,]
class(boot(grav1, diff.means, R = 999, stype = "f", strata = grav1[,2]))
# studentized confidence interval for the two sample
# difference of means problem using the final two series
# of the gravity data.
diff.means <- function(d, f)
{    n <- nrow(d)
gp1 <- 1:table(as.numeric(d$series))[1]
m1 <- sum(d[gp1,1] * f[gp1])/sum(f[gp1])
m2 <- sum(d[-gp1,1] * f[-gp1])/sum(f[-gp1])
ss1 <- sum(d[gp1,1]^2 * f[gp1]) - (m1 *  m1 * sum(f[gp1]))
ss2 <- sum(d[-gp1,1]^2 * f[-gp1]) - (m2 *  m2 * sum(f[-gp1]))
c(m1 - m2, (ss1 + ss2)/(sum(f) - 2))
}
grav1 <- gravity[as.numeric(gravity[,2]) >= 7, ]
grav1.boot <- boot(grav1, diff.means, R = 999, stype = "f",
strata = grav1[ ,2])
boot.ci(grav1.boot, type = c("stud", "norm"))
str(boot.ci(grav1.boot, type = c("stud", "norm")))
stats::cor.test(mtcars)
stats::cor.test(mtcars[, 1], mtcars[, 2])
stats::cor.test
library("future.apply")
plan(multisession)
x <- na.omit(psychTools::bfi[, 1:5])
k <- 5
rho <- 0.5
phi <- 2
sigma <- matrix(phi^2 * rho, k, k)
diag(sigma) <- phi^2
#var_ell(sigma, kurt = 1) - var_ell(sigma, kurt = 1, parallel = TRUE)
# 1.526557e-16
set.seed(313)
x = simulate_tau(10, k, 1, 3)
true = alpha(rep(3, k), rep(1, k))
alphaci(x)
devtools::load_all(".")
library("future.apply")
plan(multisession)
x <- na.omit(psychTools::bfi[, 1:5])
k <- 5
rho <- 0.5
phi <- 2
sigma <- matrix(phi^2 * rho, k, k)
diag(sigma) <- phi^2
#var_ell(sigma, kurt = 1) - var_ell(sigma, kurt = 1, parallel = TRUE)
# 1.526557e-16
set.seed(313)
x = simulate_tau(10, k, 1, 3)
true = alpha(rep(3, k), rep(1, k))
alphaci(x)
devtools::load_all(".")
library("future.apply")
plan(multisession)
x <- na.omit(psychTools::bfi[, 1:5])
k <- 5
rho <- 0.5
phi <- 2
sigma <- matrix(phi^2 * rho, k, k)
diag(sigma) <- phi^2
#var_ell(sigma, kurt = 1) - var_ell(sigma, kurt = 1, parallel = TRUE)
# 1.526557e-16
set.seed(313)
x = simulate_tau(10, k, 1, 3)
true = alpha(rep(3, k), rep(1, k))
alphaci(x)
print
getAnywhere(print.htest)
getAnywhere(print.lm)
devtools::load_all(".")
library("future.apply")
plan(multisession)
x <- na.omit(psychTools::bfi[, 1:5])
k <- 5
rho <- 0.5
phi <- 2
sigma <- matrix(phi^2 * rho, k, k)
diag(sigma) <- phi^2
#var_ell(sigma, kurt = 1) - var_ell(sigma, kurt = 1, parallel = TRUE)
# 1.526557e-16
set.seed(313)
x = simulate_tau(10, k, 1, 3)
true = alpha(rep(3, k), rep(1, k))
alphaci(x)
prtint.alphaci(alphaci(x))
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
t.test
?t.test
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
getAnywhere(print.htest)
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
diff.means <- function(d, f)
{    n <- nrow(d)
gp1 <- 1:table(as.numeric(d$series))[1]
m1 <- sum(d[gp1,1] * f[gp1])/sum(f[gp1])
m2 <- sum(d[-gp1,1] * f[-gp1])/sum(f[-gp1])
ss1 <- sum(d[gp1,1]^2 * f[gp1]) - (m1 *  m1 * sum(f[gp1]))
ss2 <- sum(d[-gp1,1]^2 * f[-gp1]) - (m2 *  m2 * sum(f[-gp1]))
c(m1 - m2, (ss1 + ss2)/(sum(f) - 2))
}
grav1 <- gravity[as.numeric(gravity[,2]) >= 7, ]
grav1.boot <- boot(grav1, diff.means, R = 999, stype = "f",
strata = grav1[ ,2])
boot.ci(grav1.boot, type = c("stud", "norm"))
print.alphaci(alphaci(x))
devtools::load_all(".")
devtools::load_all(".")
print.alphaci(alphaci(x))
library("future.apply")
plan(multisession)
x <- na.omit(psychTools::bfi[, 1:5])
k <- 5
rho <- 0.5
phi <- 2
sigma <- matrix(phi^2 * rho, k, k)
diag(sigma) <- phi^2
#var_ell(sigma, kurt = 1) - var_ell(sigma, kurt = 1, parallel = TRUE)
# 1.526557e-16
set.seed(313)
x = simulate_tau(10, k, 1, 3)
true = alpha(rep(3, k), rep(1, k))
alphaci(x)
print.alphaci(alphaci(x))
devtools::load_all(".")
library("future.apply")
plan(multisession)
x <- na.omit(psychTools::bfi[, 1:5])
k <- 5
rho <- 0.5
phi <- 2
sigma <- matrix(phi^2 * rho, k, k)
diag(sigma) <- phi^2
#var_ell(sigma, kurt = 1) - var_ell(sigma, kurt = 1, parallel = TRUE)
# 1.526557e-16
set.seed(313)
x = simulate_tau(10, k, 1, 3)
true = alpha(rep(3, k), rep(1, k))
alphaci(x)
print.alphaci(alphaci(x))
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
devtools::load_all(".")
print.alphaci(alphaci(x))
alphaci(x)
devtools::load_all(".")
alphaci(x)
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
devtools::load_all(".")
print.alphaci(alphaci(x))
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
_cat
?cat
devtools::load_all(".")
?cat
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
print.alphaci(alphaci(x, bootstrap = TRUE))
x
devtools::load_all(".")
x
print.alphaci(alphaci(x, bootstrap = TRUE))
devtools::load_all(".")
alphaci(x, bootstrap = TRUE)
library("future.apply")
plan(multisession)
x <- na.omit(psychTools::bfi[, 1:5])
k <- 5
rho <- 0.5
phi <- 2
sigma <- matrix(phi^2 * rho, k, k)
diag(sigma) <- phi^2
#var_ell(sigma, kurt = 1) - var_ell(sigma, kurt = 1, parallel = TRUE)
# 1.526557e-16
set.seed(313)
x = simulate_tau(10, k, 1, 3)
true = alpha(rep(3, k), rep(1, k))
alphaci(x)
library(alphaci)
alphaci(x, bootstrap = TRUE)
devtools::load_all(".")

## ---- include = FALSE---------------------------------------------------------
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)

## ---- cache=TRUE--------------------------------------------------------------
model <- c('y =~ A1 + A2 + A3 + A4 + A5')
fit <- lavaan::cfa(model, data = psychTools::bfi)
coefs <- lavaan::lavInspect(fit, what = "x")
lambda <- abs(c(coefs$lambda * sqrt(as.numeric(coefs$psi))))
sigma <- sqrt(diag(lavaan::lavInspect(fit, what = "x")$theta))

## ---- cache=TRUE--------------------------------------------------------------
library("alphaci")
library("future.apply")
plan(multisession)
set.seed(313)

n_reps <- 10000
k <- 5
latent <- \(n) extraDistr::rlaplace(n) / sqrt(2)
true <- alphaci:::alpha(sigma, lambda)

## ---- cache=TRUE--------------------------------------------------------------
success <- \(ci) true <= ci[2] & true >= ci[1]
len <- \(ci) ci[2] - ci[1]
simulations = \(n) {
    results = future.apply::future_replicate(n_reps, {
      latent = \(n) extraDistr::rlaplace(n) / sqrt(2)
      x = simulate_congeneric(n, k, sigma, lambda, latent = latent)
      cis = rbind(adf = alphaci(x),
        ell = alphaci(x, type = "elliptical"),
        par = alphaci(x, type = "elliptical", parallel = TRUE),
        norm = alphaci(x, type = "normal"),
        norm_par = alphaci(x, type = "normal", parallel = TRUE)
      )
      c(cov = apply(cis, 1, success), len = apply(cis, 1, len))
      }, future.seed = TRUE)
  rowMeans(results)
}

## ---- cache=TRUE--------------------------------------------------------------
simulations(10)

## ---- cache=TRUE--------------------------------------------------------------
nn <- c(5, 10, 20, 30, 40, 50, 100, 200, 500, 1000, 2000)
results <- sapply(nn, simulations)

## ---- cache=TRUE--------------------------------------------------------------
matplot(nn, t(results[1:5, ]), xlab = "n", ylab = "Coverage", type = "b",
        log = "x")
abline(h = 0.95, lty = 2)


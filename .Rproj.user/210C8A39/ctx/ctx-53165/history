avar_std(x, cov(x), type = "normal", parallel = FALSE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = FALSE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(0.5, k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(0.5, k, k)
diag(sigma) <- 1
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(0.5, k, k)
diag(sigma) <- 1
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(0.5, k, k)
diag(sigma) <- 1
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(0.5, k, k)
diag(sigma) <- 1
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(0.5, k, k)
diag(sigma) <- 1
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(0.5, k, k)
diag(sigma) <- 1
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(0.5, k, k)
diag(sigma) <- 1
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(runif(1), k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(runif(1), k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(runif(1), k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(runif(1), k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(runif(1), k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- MASS::mvrnorm(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- MASS::mvrnorm(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(runif(1), k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- LaplacesDemon::rmvl(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- LaplacesDemon::rmvl(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(runif(1), k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- LaplacesDemon::rmvl(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- LaplacesDemon::rmvl(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "elliptic", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(runif(1), k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- LaplacesDemon::rmvl(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- LaplacesDemon::rmvl(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "elliptic", parallel = TRUE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(runif(1), k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- LaplacesDemon::rmvl(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- LaplacesDemon::rmvl(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "elliptic", parallel = FALSE)
var(results) * n
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(runif(1), k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- LaplacesDemon::rmvl(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- LaplacesDemon::rmvl(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = FALSE)
var(results) * n
styler:::style_active_pkg()
alphaci_std(x)
avar_std(x, cov(x), type = "normal", parallel = FALSE)
alphaci_std(x, bootstrap = TRUE)
x <- LaplacesDemon::rmvl(500, mu = rep(0, k), Sigma = sigma)
alphaci_std(x, bootstrap = TRUE)
devtools::load_all(".")
x <- LaplacesDemon::rmvl(500, mu = rep(0, k), Sigma = sigma)
alphaci_std(x, bootstrap = TRUE)
x
alphaci(x, bootstrap = TRUE)
x <- LaplacesDemon::rmvl(50, mu = rep(0, k), Sigma = sigma)
alphaci_std(x, bootstrap = TRUE)
x
alphaci_std
devtools::load_all(".")
studentized_boots(100, x, type = "adf", parallel = FALSE, transformer = transformer_none)
standardized = FALSE
fun <- if (standardized) alpha_std else alpha
est <- fun(stats::cov(x))
fun
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
type = "adf"
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
transformer = transformer_none
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
n_reps
n_reps = 100
fun <- if (standardized) alpha_std else alpha
est <- fun(stats::cov(x))
future.apply::future_replicate(n_reps,
{
indices_star <- sample(nrow(x), nrow(x), replace = TRUE)
sigma_star <- stats::cov(x[indices_star, ])
est_star <- fun(sigma_star)
sd_star <- sqrt(avar(x[indices_star, ], sigma_star, type, parallel))
(transformer$est(est_star) - transformer$est(est)) /
transformer$sd(est_star, sd_star)
},
future.seed = TRUE
)
library(alphaci)
x <- LaplacesDemon::rmvl(50, mu = rep(0, k), Sigma = sigma)
x <- LaplacesDemon::rmvl(50, mu = rep(0, k), Sigma = sigma)
library("psychTools")
x <- bfi[, 1:5]
x[, 1] <- 7 - x[, 1] # Reverse-coded item.
x <- na.omit(x)
avar_std(x, cov(x), type = "adf", parallel = FALSE)
devtools::load_all(".")
library("psychTools")
x <- bfi[, 1:5]
x[, 1] <- 7 - x[, 1] # Reverse-coded item.
x <- na.omit(x)
avar_std(x, cov(x), type = "adf", parallel = FALSE)
avar(x, cov(x), type = "adf", parallel = FALSE)
library("future.apply")
plan(multisession)
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
results <- future_replicate(10000, {
x <- simulate_congeneric(n, 5, sigma, lambda)
alphaci:::alpha_std(cov(x))
})
x <- simulate_congeneric(10000, 5, sigma, lambda)
avar_std(x, cov(x), type = "normal", parallel = FALSE)
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(runif(1), k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- LaplacesDemon::rmvl(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- LaplacesDemon::rmvl(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = FALSE)
var(results) * n
x <- LaplacesDemon::rmvl(50, mu = rep(0, k), Sigma = sigma)
alphaci_std(x, bootstrap = TRUE)
#set.seed(313)
sigma <- runif(5)
lambda <- runif(5)
n <- 1000
k <- 5
sigma <- cov(mtcars[, sample(11, 5, replace = TRUE)])
sigma <- matrix(runif(1), k, k)
diag(sigma) <- 1
results <- future_replicate(10000, {
x <- LaplacesDemon::rmvl(n, mu = rep(0, k), Sigma = sigma)
alphaci:::alpha_std(cov(x))
})
x <- LaplacesDemon::rmvl(50000, mu = rep(0, k), Sigma = sigma)
avar_std(x, cov(x), type = "normal", parallel = FALSE)
var(results) * n
x <- LaplacesDemon::rmvl(50, mu = rep(0, k), Sigma = sigma)
alphaci_std(x, bootstrap = TRUE)
library(alphaci)
devtools::load_all(".")
library(alphaci)
